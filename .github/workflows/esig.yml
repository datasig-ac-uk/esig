name: Build esig

on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]



    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # In the future, this can be replaced by a download of the binary
      - name: Get recombine
        id: clone_recombine
        run: |
          bash ./build/git-preamble.sh
        continue-on-error: true
        env:
          RECOMBINE_USER: rolyp
          RECOMBINE_TOKEN: ${{ secrets.recombine_login }}

      - name: Get MKL
        id: get-mkl-windows
        if: runner.os == 'Windows' && steps.clone_recombine.outcome == 'success'
        shell: bash
        run: |
          curl -v -o /d/a/intel-mkl-installer.exe https://registrationcenter-download.intel.com/akdlm/irc_nas/18599/w_BaseKit_p_2022.1.3.210_offline.exe
          /d/a/intel-mkl-installer.exe -s -x -f /d/a/webimage_extracted --log extract.log 
          rm -v /d/a/intel-mkl-installer.exe
          /d/a/webimage_extracted/bootstrapper.exe -s --action install --config ./build/oneapi-install-config-x64-windows.ini --log-dir=.
          curl -v -o /d/a/intel-mkl-installer-x86.exe  https://registrationcenter-download.intel.com/akdlm/irc_nas/18599/w_BaseKit_32bit_p_2022.1.3.44_offline.exe
          /d/a/intel-mkl-installer-x86.exe -s -x -f /d/a/webimage_extracted_x86 --log extractx86.log
          rm -v /d/a/intel-mkl-installer-x86.exe
          /d/a/webimage_extracted_x86/bootstrapper.exe -s --list-components
          /d/a/webimage_extracted_x86/bootstrapper.exe -s --action install --components intel.oneapi.win.mkl.32bit --eula=accept -p=NEED_VS2017_INTEGRATION=0 -p=NEED_VS2019_INTEGRATION=0 -p=NEED_VS2022_INTEGRATION=0 --log-dir=. --ignore-errors
          echo "cmake_prefix=C:\\Program Files (x86)\\Intel\\oneAPI\\mkl" >> $GITHUB_ENV

      - name: save mkl logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: mkl-install-logs-${{ github.job }}
          path: |
            bootstrapper*
            installer*
          retention-days: 7

      - name: Get Boost x64
        id: boost
#        run: |
#          nuget install boost-vc142 -Version 1.78.0 -OutputDirectory C:\local\
#          echo "boost_root=C:\\local" >> $GITHUB_ENV
#          ls C:\local\
#        run: |
#          choco install -no-progress -y boost-msvc-14.2
#          choco list -l
        run: |
          vcpkg install boost-system:x86-windows
          vcpkg install boost-system:x64-windows
          vcpkg install boost-thread:x64-windows
          vcpkg install boost-thread:x86-windows
        if: runner.os == 'Windows'
#TODO: replace brew with vcpkg
      - name: Get Boost macos
        id: boost-macos
        run: brew install boost
        if: runner.os == 'macOS'


      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          BOOST_ROOT: ${{ env.boost_root }}
          CMAKE_PREFIX_PATH: ${{ env.cmake_prefix }}

      - name: Cache outputs
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
